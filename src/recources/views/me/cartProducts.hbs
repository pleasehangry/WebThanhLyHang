<form name="delete-product-cart-form" method="post"></form>
<form class="mt-4 container" name="container-form" method="post" action="/me/handle-form-actions">
  <div>
    <div id="toast"></div>
    <h3>Giỏ hàng</h3>
    <div class="mt-4 d-flex align-items-center">
      <div class="form-check">
        <input class="form-check-input" type="checkbox" value="" id="checkbox-all">
        <label class="form-check-label" for="checkbox-all">
          Chọn tất cả
        </label>
      </div>
      <select name="action" class="form-control form-control-sm checkbox-all-options" required>
        <option value="">--Chọn hành động</optionv>
        <option value="forceDelete">Xóa</option>
        <option value="buy">Mua</option>
      </select>
      <button class="btn btn-primary btn-sm check-all-submit-btn" disabled>Thực hiện</button>
    </div>
  </div>
    <table class="table mt-4">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">#</th>
                <th scope="col">Tên sản phẩm
                {{{sorttable 'name' _sort}}}   
                </th>
                <th scope="col">Giá bán
                {{{sorttable 'price' _sort}}}
                </th>
                <th scope="col">Ảnh</th>
                <th scope="col">Số lượng
                {{{sorttable 'quantity' _sort}}}   
                </th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            {{#each products}}
            <tr>
                <td>
                  <div class="form-check">
                  <input class="form-check-input" type="checkbox" name="productsIds[]" value="{{this.orderDetailId}}">
                  </div>  
                </td>
                <th scope="row">{{sum @index 1}}</th>
                <td>{{this.name}}</td>
                <td>{{this.price}}</td>
                <td>
                  <a href="/products/{{this.slug}}" class="">
                    <img class="me-store-img" src="/uploads/{{this.img}}" alt="{{this.name}}">
                  </a>
                </td>
                <td>
                    <p class="getProductQtt" style="display: none">{{this.quantity}}</p>
                   <div class="value-button decreaseBtn" id="decrease" value="Decrease Value">-</div>
                    <input name ="quantity" type="text" class="quantityInput" value="{{this.ODQtt}}" />
                    <div class="value-button increaseBtn" id="increase" value="Increase Value">+</div>
                </td>
                <td>
                  <button type="button" class="btn btn-primary buy-btn" data-toggle="modal" data-id ="{{this.orderDetailId}}" data-target="#buy-modal">
                    Mua
                  </button>
                    <a href="" data-toggle="modal" data-target="#delete-product-cart-modal" data-id ="{{this.orderDetailId}}" class="btn btn-danger">Xóa</a>
                </td>
            </tr>
            {{else}}
            <tr>
              <td colspan="5" class="text-center">
                Bạn chưa thêm sản phẩm nào vào giỏ hàng
              </td>
            </tr>
            {{/each}}
        </tbody>
    </table>
</form>
    {{!-- Delete modal --}}
<div id="delete-product-cart-modal" class="modal" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Xóa sản phẩm</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>Bạn chắc chắn muốn xóa sản phẩm này khỏi giỏ hàng?</p>
      </div>
      <div class="modal-footer">
        <button id="btn-delete-product-cart" type="button" class="btn btn-danger">Xóa bỏ</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
      </div>
    </div>
  </div>
</div>

{{!-- Buy modal --}}
<div class="modal fade" id="buy-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <form name="add-order-product-form" action="/me/addOrder" method="post" class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Mua sản phẩm</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
          <p>Bạn chắc chắn muốn mua sản phẩm này? Người bán sẽ liên lạc với bạn.</p>
          <div class="form-group" style="display: none;">
            <input type="password" class="form-control" id="orderDetailId" name = "orderDetailId">
            <input type="text" class="form-control" id="OrderQtt" name = "OrderQtt">
          </div>
        </div>
      <div class="modal-footer">
        <button id="btn-add-order" type="button" class="btn btn-success">Xác nhận</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
      </div>
    </form>
  </div>
</div>


<script>
    //
    function toast({ title = "", message = "", type = "info", duration = 3000 }) {
  const main = document.getElementById("toast");
    if (main) {
    const toast = document.createElement("div");

    // Auto remove toast
    const autoRemoveId = setTimeout(function () {
      main.removeChild(toast);
    }, duration + 1000);

    // Remove toast when clicked
    toast.onclick = function (e) {
      if (e.target.closest(".toast__close")) {
        main.removeChild(toast);
        clearTimeout(autoRemoveId);
      }
    };

    const icons = {
      success: "fas fa-check-circle",
      info: "fas fa-info-circle",
      warning: "fas fa-exclamation-circle",
      error: "fas fa-exclamation-circle"
    };
    const icon = icons[type];
    const delay = (duration / 1000).toFixed(2);

    toast.classList.add("toast", `toast--${type}`);
    toast.style.animation = `slideInLeft ease .3s, fadeOut linear 1s ${delay}s forwards`;

    toast.innerHTML = `
                    <div class="toast__icon">
                        <i class="${icon}"></i>
                    </div>
                    <div class="toast__body">
                        <h3 class="toast__title">${title}</h3>
                        <p class="toast__msg">${message}</p>
                    </div>
                    <div class="toast__close">
                        <i class="fas fa-times"></i>
                    </div>
                `;
    main.appendChild(toast);
    }
  }
    document.addEventListener("DOMContentLoaded", function(){
        var orderDetail_id
        var inputODID = document.getElementById("orderDetailId")
        var inputQtt = document.getElementById("OrderQtt")
        var deleteForm = document.forms["delete-product-cart-form"]
        var addODForm = document.forms["add-order-product-form"]
        var productItemCheckbox = $('input[name="productsIds[]"]')
        var checkAllSubBtn = $('.check-all-submit-btn')
        var checkboxAll = $('#checkbox-all')
        var BuyBtns = document.querySelectorAll('.buy-btn');
        var getQttOrder;

        $("#delete-product-cart-modal").on('show.bs.modal', function(event){
          var button = $(event.relatedTarget);
          orderDetail_id = button.data("id");
        })
        $("#buy-modal").on('show.bs.modal', function(event){
          var button = $(event.relatedTarget);
          orderDetail_id = button.data("id");
          BuyBtns.forEach((BuyBtn,i) => {
            if(BuyBtn.getAttribute("data-id") == orderDetail_id){
                getQttOrder = qttInputs[i].value;
            }
          })
        })
        //Delete product from cart
        var btnDeleteProductCart = document.getElementById("btn-delete-product-cart")
        btnDeleteProductCart.onclick = function(e){
            e.preventDefault()
            deleteForm.action = "/me/hideFromCart/" + orderDetail_id + "/force?_method=DELETE";
            deleteForm.submit()
        }
        //add product to orders
        
        
        var btnAddProduct = document.getElementById("btn-add-order")
        btnAddProduct.onclick = function(e){
            e.preventDefault()
            inputODID.setAttribute("value", orderDetail_id);
            inputQtt.setAttribute("value", getQttOrder);
            addODForm.submit()
        }
        // when the checkbox all click
        checkboxAll.change(function(){
          var isChecked = $(this).prop("checked")
          productItemCheckbox.prop("checked",isChecked);
          renderCheckAllSubmitBtn()
        })
        // when checkbox item check
        productItemCheckbox.change(function(){
          var isCheckAll = productItemCheckbox.length === $('input[name="productsIds[]"]:checked').length
          checkboxAll.prop("checked",isCheckAll);
          renderCheckAllSubmitBtn()
        })
        function renderCheckAllSubmitBtn() {
          var checkedCount = $('input[name="productsIds[]"]:checked').length
          if(checkedCount > 0) {
            checkAllSubBtn.attr('disabled', false);
          }
          else {
            checkAllSubBtn.attr('disabled', true);
          }
        }
    })

</script>


<script>
  var ProductQtts = document.querySelectorAll('.getProductQtt');
  var increaseBtns = document.querySelectorAll('.increaseBtn')
  var decreaseBtns = document.querySelectorAll('.decreaseBtn')
  var qttInputs = document.querySelectorAll('.quantityInput');

  increaseBtns.forEach( (increaseBtn, i) => {
    increaseBtn.addEventListener('click', function (e) {
      var value = parseInt(qttInputs[i].value, 10);
      var valueOri = parseInt(ProductQtts[i].innerHTML, 10);
      value = isNaN(value) ? 1 : value;
      if( value < valueOri ){
        value++;
      }
      qttInputs[i].value = value;
    })
  })
  decreaseBtns.forEach( (decreaseBtn, i) => {
    decreaseBtn.addEventListener('click', function (e) {
      var value = parseInt(qttInputs[i].value, 10);
      value = isNaN(value) ? 1 : value;
      value < 2 ? value = 1 : '';
      value--;
      value < 1 ? value = 1 : '';
      qttInputs[i].value = value;
    })
  })
</script>